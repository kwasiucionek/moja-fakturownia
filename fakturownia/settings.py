"""
Django settings for fakturownia project - PRODUCTION READY

Generated by 'django-admin startproject' using Django 5.2.3.
Updated for production deployment with security best practices.
"""

from pathlib import Path
import os
import environ
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Initialize environment variables
env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False),
    SECRET_KEY=(str, 'django-insecure-0r!vdj6r+t*$*8$sb)^he#%lmg9@^!41j=a47t-gnv(@2_8r27'),
    ALLOWED_HOSTS=(list, ['localhost', '127.0.0.1']),
    SECURE_SSL_REDIRECT=(bool, False),
    SECURE_HSTS_SECONDS=(int, 0),
    SECURE_HSTS_INCLUDE_SUBDOMAINS=(bool, False),
    SECURE_HSTS_PRELOAD=(bool, False),
    SECURE_CONTENT_TYPE_NOSNIFF=(bool, True),
    SECURE_BROWSER_XSS_FILTER=(bool, True),
    SECURE_PROXY_SSL_HEADER=(bool, False),
    SESSION_COOKIE_SECURE=(bool, False),
    CSRF_COOKIE_SECURE=(bool, False),
    LANGUAGE_CODE=(str, 'pl'),
    TIME_ZONE=(str, 'Europe/Warsaw'),
    STATIC_ROOT=(str, str(BASE_DIR / 'staticfiles')),
    MEDIA_ROOT=(str, str(BASE_DIR / 'media')),
    EMAIL_BACKEND=(str, 'django.core.mail.backends.console.EmailBackend'),
    EMAIL_HOST=(str, ''),
    EMAIL_PORT=(int, 587),
    EMAIL_USE_TLS=(bool, True),
    EMAIL_HOST_USER=(str, ''),
    EMAIL_HOST_PASSWORD=(str, ''),
    DEFAULT_FROM_EMAIL=(str, 'webmaster@localhost'),
    LOG_LEVEL=(str, 'INFO'),
    LOG_FILE=(str, ''),
    CORS_ALLOWED_ORIGINS=(list, []),
    ENABLE_API=(bool, False),
)

# Take environment variables from .env file
environ.Env.read_env(BASE_DIR / '.env')

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = env('ALLOWED_HOSTS')

# Security headers
SECURE_SSL_REDIRECT = env('SECURE_SSL_REDIRECT')
SECURE_HSTS_SECONDS = env('SECURE_HSTS_SECONDS')
SECURE_HSTS_INCLUDE_SUBDOMAINS = env('SECURE_HSTS_INCLUDE_SUBDOMAINS')
SECURE_HSTS_PRELOAD = env('SECURE_HSTS_PRELOAD')
SECURE_CONTENT_TYPE_NOSNIFF = env('SECURE_CONTENT_TYPE_NOSNIFF')
SECURE_BROWSER_XSS_FILTER = env('SECURE_BROWSER_XSS_FILTER')
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https') if env('SECURE_PROXY_SSL_HEADER') else None

# Cookies security
SESSION_COOKIE_SECURE = env('SESSION_COOKIE_SECURE')
CSRF_COOKIE_SECURE = env('CSRF_COOKIE_SECURE')
SESSION_COOKIE_HTTPONLY = True
CSRF_COOKIE_HTTPONLY = True
SESSION_COOKIE_AGE = 3600 * 8  # 8 godzin

# =============================================================================
# APPLICATION DEFINITION
# =============================================================================

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'whitenoise.runserver_nostatic',  # Dla plików statycznych w produkcji
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'social_django',

    # Third party apps
    'corsheaders',
    'django_extensions',

    # Dodatkowe tylko w development
    *(['debug_toolbar'] if DEBUG else []),

    # Local apps
    'ksiegowosc',

    # Health check
    'health_check',
    'health_check.db',
    'health_check.cache',
    'health_check.storage',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'ksiegowosc.middleware.AdminLoginRedirectMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Pliki statyczne
    'django.contrib.sessions.middleware.SessionMiddleware',
    *(['debug_toolbar.middleware.DebugToolbarMiddleware'] if DEBUG else []),
    'social_django.middleware.SocialAuthExceptionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'fakturownia.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'fakturownia.wsgi.application'

# =============================================================================
# DATABASE
# =============================================================================

# Database URL can be provided via DATABASE_URL environment variable
# If not provided, defaults to SQLite
DATABASE_URL = env.db_url('DATABASE_URL', default='sqlite:///db.sqlite3')

DATABASES = {
    'default': {
        **DATABASE_URL,
        'CONN_MAX_AGE': 600,
        'CONN_HEALTH_CHECKS': True,
    }
}

# =============================================================================
# PASSWORD VALIDATION
# =============================================================================

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 12,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# =============================================================================
# INTERNATIONALIZATION
# =============================================================================

LANGUAGE_CODE = env('LANGUAGE_CODE')
TIME_ZONE = env('TIME_ZONE')
USE_I18N = True
USE_TZ = True

# =============================================================================
# STATIC FILES & MEDIA
# =============================================================================

STATIC_URL = '/static/'
STATIC_ROOT = env('STATIC_ROOT')

MEDIA_URL = '/media/'
MEDIA_ROOT = env('MEDIA_ROOT')

# WhiteNoise settings for static files
STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'
WHITENOISE_USE_FINDERS = True
WHITENOISE_AUTOREFRESH = DEBUG

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================

EMAIL_BACKEND = env('EMAIL_BACKEND')
EMAIL_HOST = env('EMAIL_HOST')
EMAIL_PORT = env('EMAIL_PORT')
EMAIL_USE_TLS = env('EMAIL_USE_TLS')
EMAIL_HOST_USER = env('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = env('DEFAULT_FROM_EMAIL')

# =============================================================================
# CACHE CONFIGURATION
# =============================================================================

# Sprawdź czy REDIS_URL jest ustawiony i nie jest pusty
REDIS_URL = env('REDIS_URL', default='')

if REDIS_URL and REDIS_URL.strip():
    try:
        # Użyj env.cache_url tylko jeśli REDIS_URL jest poprawny
        cache_config = env.cache_url('REDIS_URL')
        CACHES = {
            'default': cache_config
        }
    except Exception:
        # Fallback do LocMem jeśli Redis URL jest nieprawidłowy
        CACHES = {
            'default': {
                'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
            }
        }
else:
    # Użyj LocMem cache jako domyślny
    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        }
    }

# =============================================================================
# LOGGING
# =============================================================================

LOG_LEVEL = env('LOG_LEVEL')
LOG_FILE = env('LOG_FILE')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'level': LOG_LEVEL,
            'class': 'logging.StreamHandler',
            'formatter': 'verbose' if DEBUG else 'simple',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': LOG_LEVEL,
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': LOG_LEVEL,
            'propagate': False,
        },
        'ksiegowosc': {
            'handlers': ['console'],
            'level': LOG_LEVEL,
            'propagate': False,
        },
    },
}

# Dodaj file handler jeśli podano ścieżkę
if LOG_FILE:
    LOGGING['handlers']['file'] = {
        'level': LOG_LEVEL,
        'class': 'logging.handlers.RotatingFileHandler',
        'filename': LOG_FILE,
        'maxBytes': 1024*1024*10,  # 10 MB
        'backupCount': 5,
        'formatter': 'verbose',
    }
    LOGGING['root']['handlers'].append('file')
    LOGGING['loggers']['django']['handlers'].append('file')
    LOGGING['loggers']['ksiegowosc']['handlers'].append('file')

# =============================================================================
# SENTRY CONFIGURATION (ERROR MONITORING)
# =============================================================================

SENTRY_DSN = env('SENTRY_DSN', default=None)

if SENTRY_DSN and not DEBUG:
    import sentry_sdk
    from sentry_sdk.integrations.django import DjangoIntegration
    from sentry_sdk.integrations.logging import LoggingIntegration
    import logging

    sentry_logging = LoggingIntegration(
        level=logging.INFO,
        event_level=logging.ERROR
    )

    sentry_sdk.init(
        dsn=SENTRY_DSN,
        integrations=[
            DjangoIntegration(
                transaction_propagate_to_parent_spans=True,
            ),
            sentry_logging,
        ],
        traces_sample_rate=0.1,
        send_default_pii=False,
        environment='production' if not DEBUG else 'development',
    )



LOGIN_URL = '/auth/login/'
LOGOUT_REDIRECT_URL = '/auth/login/'
LOGIN_REDIRECT_URL = '/auth/dashboard/'



# =============================================================================
# JAZZMIN CONFIGURATION
# =============================================================================

JAZZMIN_SETTINGS = {
    # Tytuły
    "site_title": "Fakturownia",
    "site_header": "Fakturownia",
    "site_brand": "Fakturownia",
    "welcome_sign": "Witaj w panelu Fakturowni",
    "copyright": "Fakturownia App",

    # Górne menu
    "topmenu_links": [
        {"name": "Home", "url": "admin:index"},
        {"name": "Dashboard", "url": "admin:ksiegowosc_dashboard", "permissions": ["ksiegowosc.view_monthlysettlement"]},
        {"app": "ksiegowosc"},
    ],

    # Menu użytkownika
    "usermenu_links": [
        {"model": "auth.user"}
    ],

    # Uporządkuj menu
    "order_with_respectto": ["ksiegowosc", "auth"],

    # Menu boczne
    "show_sidebar": True,
    "navigation_expanded": True,

    # Ikony
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "ksiegowosc": "fas fa-file-invoice-dollar",
        "ksiegowosc.companyinfo": "fas fa-building",
        "ksiegowosc.contractor": "fas fa-address-book",
        "ksiegowosc.invoice": "fas fa-file-invoice",
        "ksiegowosc.monthlysettlement": "fas fa-calculator",
        "ksiegowosc.yearlysettlement": "fas fa-calendar-alt",
        "ksiegowosc.zusrates": "fas fa-coins",
        "ksiegowosc.payment": "fas fa-money-bill-wave",
        "ksiegowosc.purchaseinvoice": "fas fa-shopping-cart",
        "ksiegowosc.expensecategory": "fas fa-tags",
    },

    # Ulepszenia interfejsu
    "show_ui_builder": False,  # Wyłącz w produkcji
    "changeform_format": "horizontal_tabs",
    "related_modal_active": True,

    # Custom dashboard
    "custom_links": {
        "ksiegowosc": [{
            "name": "Dashboard z wykresami",
            "url": "admin:ksiegowosc_dashboard",
            "icon": "fas fa-chart-pie",
            "permissions": ["ksiegowosc.view_monthlysettlement"]
        }]
    },

    # CSS/JS
    "custom_css": None,
    "custom_js": None,
    "use_google_fonts_cdn": True,
    "show_ui_builder": False,
    "language_chooser": False,
}

# =============================================================================
# DEBUG TOOLBAR (ONLY IN DEVELOPMENT)
# =============================================================================

if DEBUG:
    INTERNAL_IPS = [
        "127.0.0.1",
        "localhost",
    ]

# =============================================================================
# DEFAULT PRIMARY KEY FIELD TYPE
# =============================================================================

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# =============================================================================
# CORS SETTINGS (jeśli używasz API)
# =============================================================================

CORS_ALLOWED_ORIGINS = env('CORS_ALLOWED_ORIGINS')

# =============================================================================
# SESSIONS & SECURITY
# =============================================================================

SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'
SESSION_CACHE_ALIAS = 'default'
SESSION_SAVE_EVERY_REQUEST = False

# File upload settings
FILE_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024  # 10 MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024  # 10 MB
DATA_UPLOAD_MAX_NUMBER_FIELDS = 1000

# =============================================================================
# HEALTH CHECK
# =============================================================================

HEALTH_CHECK = {
    'DEFAULT_TIMEOUT': 5,
}

# =============================================================================
# BACKUP SETTINGS (opcjonalne)
# =============================================================================

DBBACKUP_STORAGE = env('DBBACKUP_STORAGE', default='django.core.files.storage.FileSystemStorage')

# Bezpieczne parsowanie DBBACKUP_STORAGE_OPTIONS
try:
    # Spróbuj jako JSON string
    DBBACKUP_STORAGE_OPTIONS = env.json('DBBACKUP_STORAGE_OPTIONS', default={'location': str(BASE_DIR / 'backups')})
except ValueError:
    # Fallback do wartości domyślnej
    DBBACKUP_STORAGE_OPTIONS = {'location': str(BASE_DIR / 'backups')}

# =============================================================================
# CUSTOM SETTINGS FOR FAKTUROWNIA
# =============================================================================

# Automatyczne numerowanie faktur
INVOICE_NUMBER_FORMAT = "F/{id}/{month}/{year}"

# Domyślny termin płatności (dni)
DEFAULT_PAYMENT_DAYS = 14

# Maksymalny rozmiar pliku PDF faktury (MB)
MAX_INVOICE_PDF_SIZE = 10

# =============================================================================
# API ENDPOINTS (przyszłe rozszerzenia)
# =============================================================================

ENABLE_API = env('ENABLE_API')

# =============================================================================
# DEVELOPMENT OVERRIDES
# =============================================================================

if DEBUG:
    # Wyłącz niektóre zabezpieczenia w development
    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SECURE = False
    SECURE_SSL_REDIRECT = False

    # Email w konsoli
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

    # Dodatkowe narzędzia deweloperskie
    SHELL_PLUS_PRINT_SQL = True

    # Google OAuth Settings
    SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = env('GOOGLE_OAUTH2_KEY', default='')
    SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = env('GOOGLE_OAUTH2_SECRET', default='')

    # Social Auth Settings
    SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
        'https://www.googleapis.com/auth/userinfo.email',
        'https://www.googleapis.com/auth/userinfo.profile',
    ]

    SOCIAL_AUTH_GOOGLE_OAUTH2_EXTRA_DATA = ['first_name', 'last_name']

    # Pipeline dla automatycznego przypisania do grupy
    SOCIAL_AUTH_PIPELINE = (
        'social_core.pipeline.social_auth.social_details',
        'social_core.pipeline.social_auth.social_uid',
        'social_core.pipeline.social_auth.social_user',
        'social_core.pipeline.user.get_username',
        'social_core.pipeline.user.create_user',
        'ksiegowosc.auth_pipeline.assign_to_ksiegowosc_group',  # Custom pipeline
        'social_core.pipeline.social_auth.associate_user',
        'social_core.pipeline.social_auth.load_extra_data',
        'social_core.pipeline.user.user_details',
    )

    # Przekierowania po logowaniu
    SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/auth/dashboard/'
    SOCIAL_AUTH_NEW_USER_REDIRECT_URL = '/admin/ksiegowosc/companyinfo/add/'
    SOCIAL_AUTH_LOGIN_ERROR_URL = '/auth/login/'

AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)


# ===== DODAJ DO settings.py =====

# =============================================================================
# PWA CONFIGURATION
# =============================================================================

# Wersja PWA
PWA_VERSION = '1.2.0'

# Ustawienia PWA
PWA_SETTINGS = {
    'name': 'Fakturownia - System Księgowy',
    'short_name': 'Fakturownia',
    'description': 'System księgowy dla małych przedsiębiorców - faktury, rozliczenia, ZUS',
    'theme_color': '#007bff',
    'background_color': '#ffffff',
    'display': 'standalone',
    'orientation': 'portrait-primary',
    'start_url': '/',
    'scope': '/',
    'lang': 'pl',
    'categories': ['business', 'finance', 'productivity'],
    'icons': {
        'icon-72x72': '/static/pwa/icons/icon-72x72.png',
        'icon-96x96': '/static/pwa/icons/icon-96x96.png',
        'icon-128x128': '/static/pwa/icons/icon-128x128.png',
        'icon-144x144': '/static/pwa/icons/icon-144x144.png',
        'icon-152x152': '/static/pwa/icons/icon-152x152.png',
        'icon-192x192': '/static/pwa/icons/icon-192x192.png',
        'icon-384x384': '/static/pwa/icons/icon-384x384.png',
        'icon-512x512': '/static/pwa/icons/icon-512x512.png',
        'apple-touch-icon': '/static/pwa/icons/apple-touch-icon.png',
        'favicon-32x32': '/static/pwa/icons/favicon-32x32.png',
        'favicon-16x16': '/static/pwa/icons/favicon-16x16.png',
    }
}

# Cache settings dla PWA
PWA_CACHE_SETTINGS = {
    'STATIC_CACHE_NAME': 'fakturownia-static-v1.2.0',
    'DYNAMIC_CACHE_NAME': 'fakturownia-dynamic-v1.2.0',
    'CACHE_VERSION': '1.2.0',
    'MAX_CACHE_SIZE': 50 * 1024 * 1024,  # 50MB
    'CACHE_EXPIRY': 24 * 60 * 60,  # 24 godziny w sekundach
}

# =============================================================================
# SECURITY SETTINGS (rozszerzone dla PWA)
# =============================================================================

# Content Security Policy dla PWA
CSP_DEFAULT_SRC = ("'self'",)
CSP_SCRIPT_SRC = (
    "'self'",
    "'unsafe-inline'",  # Potrzebne dla inline scripts w PWA
    "https://cdn.jsdelivr.net",
    "https://cdnjs.cloudflare.com",
)
CSP_STYLE_SRC = (
    "'self'",
    "'unsafe-inline'",  # Potrzebne dla inline styles
    "https://cdn.jsdelivr.net",
    "https://cdnjs.cloudflare.com",
    "https://fonts.googleapis.com",
)
CSP_IMG_SRC = (
    "'self'",
    "data:",  # Dla base64 obrazów
    "https:",
)
CSP_FONT_SRC = (
    "'self'",
    "https://fonts.gstatic.com",
    "https://cdnjs.cloudflare.com",
)
CSP_CONNECT_SRC = (
    "'self'",
    "https:",  # Dla API calls
)
CSP_MANIFEST_SRC = ("'self'",)
CSP_WORKER_SRC = ("'self'",)

# Dodatowe nagłówki bezpieczeństwa
SECURE_CROSS_ORIGIN_OPENER_POLICY = "same-origin"

# Dodaj do MIDDLEWARE jeśli używasz django-csp
# 'csp.middleware.CSPMiddleware',

# =============================================================================
# LOGGING (rozszerzone dla PWA)
# =============================================================================

# Dodaj do LOGGING['loggers']
LOGGING['loggers']['pwa'] = {
    'handlers': ['console'],
    'level': LOG_LEVEL,
    'propagate': False,
}

# =============================================================================
# STATIC FILES (rozszerzone dla PWA)
# =============================================================================

# Dodatkowe ścieżki statyczne dla PWA
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Whitelist rozszerzeń plików statycznych
WHITENOISE_SKIP_COMPRESS_EXTENSIONS = ['jpg', 'jpeg', 'png', 'gif', 'webp', 'zip', 'gz', 'tgz', 'bz2', 'tbz', 'xz', 'br']

# Custom headers dla plików PWA
WHITENOISE_ADD_HEADERS_FUNCTION = 'ksiegowosc.utils.add_pwa_headers'

# =============================================================================
# CACHE CONFIGURATION (rozszerzone dla PWA)
# =============================================================================

# Dodaj cache dla PWA
CACHES['pwa'] = {
    'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
    'LOCATION': 'pwa-cache',
    'OPTIONS': {
        'MAX_ENTRIES': 1000,
    }
}

# =============================================================================
# CUSTOM SETTINGS FOR PWA
# =============================================================================

# Offline pages
PWA_OFFLINE_PAGES = [
    '/',
    '/auth/login/',
    '/admin/',
    '/admin/ksiegowosc/monthlysettlement/dashboard/',
]

# Funkcje dostępne offline
PWA_OFFLINE_FEATURES = [
    'basic_calculator',
    'cached_data_viewing',
    'form_data_storage',
]

# Push notifications (dla przyszłości)
PWA_PUSH_NOTIFICATIONS = {
    'enabled': False,
    'vapid_public_key': '',
    'vapid_private_key': '',
    'vapid_subject': 'mailto:admin@fakturownia.pl',
}

# Background sync (dla przyszłości)
PWA_BACKGROUND_SYNC = {
    'enabled': False,
    'sync_interval': 60 * 15,  # 15 minut
}
